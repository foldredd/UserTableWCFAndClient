//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UserService.DTO
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/UserService.DTO")]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ContactPhoneField;
        
        private System.DateTime CreationDateField;
        
        private string EmailField;
        
        private string FullNameField;
        
        private int IDField;
        
        private System.DateTime LastModifiedDateField;
        
        private string TINField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPhone
        {
            get
            {
                return this.ContactPhoneField;
            }
            set
            {
                this.ContactPhoneField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate
        {
            get
            {
                return this.CreationDateField;
            }
            set
            {
                this.CreationDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName
        {
            get
            {
                return this.FullNameField;
            }
            set
            {
                this.FullNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedDate
        {
            get
            {
                return this.LastModifiedDateField;
            }
            set
            {
                this.LastModifiedDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TIN
        {
            get
            {
                return this.TINField;
            }
            set
            {
                this.TINField = value;
            }
        }
    }
}
namespace UserService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/UserService")]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool BoolValueField;
        
        private string StringValueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue
        {
            get
            {
                return this.BoolValueField;
            }
            set
            {
                this.BoolValueField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue
        {
            get
            {
                return this.StringValueField;
            }
            set
            {
                this.StringValueField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IUserService")]
public interface IUserService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/testingConnect", ReplyAction="http://tempuri.org/IUserService/testingConnectResponse")]
    string testingConnect();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/testingConnect", ReplyAction="http://tempuri.org/IUserService/testingConnectResponse")]
    System.Threading.Tasks.Task<string> testingConnectAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Update", ReplyAction="http://tempuri.org/IUserService/UpdateResponse")]
    bool Update(int id, string fullName, string tin, string email, string contactPhone);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Update", ReplyAction="http://tempuri.org/IUserService/UpdateResponse")]
    System.Threading.Tasks.Task<bool> UpdateAsync(int id, string fullName, string tin, string email, string contactPhone);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Create", ReplyAction="http://tempuri.org/IUserService/CreateResponse")]
    bool Create(string fullName, string tin, string email, string contactPhone);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Create", ReplyAction="http://tempuri.org/IUserService/CreateResponse")]
    System.Threading.Tasks.Task<bool> CreateAsync(string fullName, string tin, string email, string contactPhone);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Delete", ReplyAction="http://tempuri.org/IUserService/DeleteResponse")]
    bool Delete(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Delete", ReplyAction="http://tempuri.org/IUserService/DeleteResponse")]
    System.Threading.Tasks.Task<bool> DeleteAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetData", ReplyAction="http://tempuri.org/IUserService/GetDataResponse")]
    string GetData(int value);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetData", ReplyAction="http://tempuri.org/IUserService/GetDataResponse")]
    System.Threading.Tasks.Task<string> GetDataAsync(int value);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsers", ReplyAction="http://tempuri.org/IUserService/GetUsersResponse")]
    UserService.DTO.User[] GetUsers();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsers", ReplyAction="http://tempuri.org/IUserService/GetUsersResponse")]
    System.Threading.Tasks.Task<UserService.DTO.User[]> GetUsersAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IUserService/GetDataUsingDataContractResponse")]
    UserService.CompositeType GetDataUsingDataContract(UserService.CompositeType composite);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IUserService/GetDataUsingDataContractResponse")]
    System.Threading.Tasks.Task<UserService.CompositeType> GetDataUsingDataContractAsync(UserService.CompositeType composite);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IUserServiceChannel : IUserService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class UserServiceClient : System.ServiceModel.ClientBase<IUserService>, IUserService
{
    
    public UserServiceClient()
    {
    }
    
    public UserServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public string testingConnect()
    {
        return base.Channel.testingConnect();
    }
    
    public System.Threading.Tasks.Task<string> testingConnectAsync()
    {
        return base.Channel.testingConnectAsync();
    }
    
    public bool Update(int id, string fullName, string tin, string email, string contactPhone)
    {
        return base.Channel.Update(id, fullName, tin, email, contactPhone);
    }
    
    public System.Threading.Tasks.Task<bool> UpdateAsync(int id, string fullName, string tin, string email, string contactPhone)
    {
        return base.Channel.UpdateAsync(id, fullName, tin, email, contactPhone);
    }
    
    public bool Create(string fullName, string tin, string email, string contactPhone)
    {
        return base.Channel.Create(fullName, tin, email, contactPhone);
    }
    
    public System.Threading.Tasks.Task<bool> CreateAsync(string fullName, string tin, string email, string contactPhone)
    {
        return base.Channel.CreateAsync(fullName, tin, email, contactPhone);
    }
    
    public bool Delete(int id)
    {
        return base.Channel.Delete(id);
    }
    
    public System.Threading.Tasks.Task<bool> DeleteAsync(int id)
    {
        return base.Channel.DeleteAsync(id);
    }
    
    public string GetData(int value)
    {
        return base.Channel.GetData(value);
    }
    
    public System.Threading.Tasks.Task<string> GetDataAsync(int value)
    {
        return base.Channel.GetDataAsync(value);
    }
    
    public UserService.DTO.User[] GetUsers()
    {
        return base.Channel.GetUsers();
    }
    
    public System.Threading.Tasks.Task<UserService.DTO.User[]> GetUsersAsync()
    {
        return base.Channel.GetUsersAsync();
    }
    
    public UserService.CompositeType GetDataUsingDataContract(UserService.CompositeType composite)
    {
        return base.Channel.GetDataUsingDataContract(composite);
    }
    
    public System.Threading.Tasks.Task<UserService.CompositeType> GetDataUsingDataContractAsync(UserService.CompositeType composite)
    {
        return base.Channel.GetDataUsingDataContractAsync(composite);
    }
}
